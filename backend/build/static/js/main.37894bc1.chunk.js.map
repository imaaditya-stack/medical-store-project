{"version":3,"sources":["redux/actions/action.types.js","utils/auth.js","api/axios.config.js","redux/actions/alert.js","utils/yup.schemas.js","components/Error.js","components/Alert.js","pages/Login.js","redux/actions/auth.js","redux/actions/medicine.js","components/Sidebar/SidebarLinks.js","components/Sidebar/SidebarContainer.js","components/Drawer/withDrawer.js","components/Table/config/common.js","components/Table/config/medicine.table.js","components/Loader.jsx","components/Modal.js","components/Table/Table.js","components/CrudComponent.js","pages/Manage.Medicine.js","components/FormFooter.js","pages/Add.Medicine.js","redux/actions/store.js","components/Table/config/store.table.js","pages/Manage.Store.js","pages/Add.Store.js","components/Private.Route.js","App.js","redux/reducers/auth.reducer.js","redux/reducers/store.reducer.js","redux/reducers/medicine.reducer.js","redux/reducers/alert.reducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["AUTH_SUCCESS","AUTH_ERROR","LOGOUT","LOAD_STORES","STORES_ERROR","STORE_TYPES","STORE_TYPES_ERROR","ADD_STORE","DELETE_STORE","DELETE_STORE_ERROR","UPDATE_STORE","LOAD_MEDS","MEDS_ERROR","ADD_MED","MED_TYPES","MED_TYPES_ERROR","DELETE_MED","DELETE_MED_ERROR","UPDATE_MED","SET_ALERT","REMOVE_ALERT","RESET_ALERTS","getAuthToken","localStorage","AUTH","defaultOptions","baseURL","headers","AXIOS_CLIENT","axios","create","interceptors","request","use","config","token","Authorization","err","Promise","reject","response","res","status","clear","setAlert","msg","type","timeout","dispatch","id","uuidv4","payload","setTimeout","loginSchema","yup","shape","username","required","password","addStoreSchema","store_name","min","max","store_email_id","email","notRequired","mobile_number","matches","message","excludeEmptyString","store_registration_no","nullable","store_license","store_type_id","address_1","address_2","date","Date","setFullYear","getFullYear","addMedicineSchema","medicine_name","medicine_price","transform","value","isNaN","undefined","medicine_details","medicine_quantity","integer","medicine_type_id","store_id","medicine_expiry_date","typeError","Error","error","className","Alert","propTypes","alerts","PropTypes","arrayOf","string","number","AlertDialog","map","alert","variant","Login","useSelector","state","alertReducer","history","useHistory","useDispatch","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","Container","Form","onSubmit","data","a","post","setItem","push","MSG","login","Group","controlId","Label","Control","placeholder","Button","loadMeds","get","deleteMed","currentMeds","delete","SidebarLinks","title","icon","href","canClick","SidebarContainer","handleLogout","console","log","logout","List","item","ListItem","button","onClick","ListItemIcon","ListItemText","primary","component","Link","to","withDrawer","props","WrappedComponent","moreProps","classes","styles","root","CssBaseline","AppBar","position","appBar","Toolbar","Typography","noWrap","Drawer","drawer","paper","drawerPaper","anchor","toolbar","Divider","content","drawerWidth","makeStyles","theme","display","width","marginLeft","backgroundColor","flexShrink","mixins","flexGrow","palette","background","default","padding","spacing","actionConfig","handleEdit","handleShow","render","rowData","style","marginRight","medicineTableCols","handleDelete","medicine_type_id_label","store_id_label","Loader","Spinner","animation","size","ConfirmModal","show","handleClose","Modal","onHide","centered","Header","closeButton","Title","Body","Footer","StyledTableCell","withStyles","head","color","common","white","fontSize","body","TableCell","StyledTableRow","action","hover","TableRow","useStyles","table","minWidth","CustomizedTables","cols","TableContainer","Paper","Table","TableHead","col","idx","TableBody","row","CrudComponent","loading","readAction","tableConfig","deleteAction","btnLabel","useState","setShow","selectedRow","setSelectedRow","useEffect","length","record","pathname","update","medReducer","meds","FormFooter","float","location","medTypes","stores","storeReducer","reset","all","then","spread","typesResponse","storeResponse","catch","formData","newFormData","moment","format","put","RECORD","updateMed","addMed","Row","Col","lg","defaultValue","step","Select","name","medicine_type_name","store","loadStores","deleteStore","currentstores","storeTableCols","store_type_label","storeTypes","fetchStoreTypes","updateStore","addStore","Check","inline","label","defaultChecked","type_name","as","rows","PrivateRoute","Component","rest","authReducer","isAuthenticated","authenticated","App","window","addEventListener","path","exact","Store","StoreForm","Medicine","MedicineForm","INIT_STATE","user","filter","med","appReducer","combineReducers","rootReducer","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.37894bc1.chunk.js","sourcesContent":["//Auth action types\r\nexport const AUTH_SUCCESS = \"AUTH_CHECK\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\n//Store ( Medical store ) action types\r\nexport const LOAD_STORES = \"LOAD_STORES\";\r\nexport const STORES_ERROR = \"STORES_ERROR\";\r\nexport const STORE_TYPES = \"STORE_TYPES\";\r\nexport const STORE_TYPES_ERROR = \"STORE_TYPES_ERROR\";\r\nexport const ADD_STORE = \"ADD_STORE\";\r\nexport const ADD_STORE_ERROR = \"ADD_STORE_ERROR\";\r\nexport const DELETE_STORE = \"DELETE_STORE\";\r\nexport const DELETE_STORE_ERROR = \"DELETE_STORE_ERROR\";\r\nexport const UPDATE_STORE = \"UPDATE_STORE\";\r\n\r\n// Meds ( Medicines ) action types\r\nexport const LOAD_MEDS = \"LOAD_MEDS\";\r\nexport const MEDS_ERROR = \"MEDS_ERROR\";\r\nexport const ADD_MED = \"ADD_MEDS\";\r\nexport const ADD_MED_ERROR = \"ADD_MEDS_ERROR\";\r\nexport const MED_TYPES = \"MED_TYPES\";\r\nexport const MED_TYPES_ERROR = \"MED_TYPES_ERROR\";\r\nexport const DELETE_MED = \"DELETE_MED\";\r\nexport const DELETE_MED_ERROR = \"DELETE_MED_ERROR\";\r\nexport const UPDATE_MED = \"UPDATE_MED\";\r\n\r\n// Alerts action types\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const RESET_ALERTS = \"RESET_ALERTS\";\r\n","export const getAuthToken = () => {\r\n  return localStorage?.AUTH;\r\n};\r\n\r\nexport const handleAuthentication = (token) => {\r\n  localStorage.setItem(\"AUTH\", token);\r\n};\r\n","import axios from \"axios\";\r\nimport { getAuthToken } from \"../utils/auth\";\r\n\r\n//DEV\r\n// const BASE_URL = \"http://localhost:8000/api/\";\r\n\r\n//PROD\r\nconst BASE_URL = \"https://medical-store-project.herokuapp.com/api/\";\r\n\r\nconst defaultOptions = {\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n// Default axios instance\r\nlet AXIOS_CLIENT = axios.create(defaultOptions);\r\n\r\n// Set authorization header by default if token exists\r\nAXIOS_CLIENT.interceptors.request.use(\r\n  (config) => {\r\n    const token = getAuthToken();\r\n    if (token) {\r\n      config.headers.Authorization = `Token ${token}`;\r\n    } else {\r\n      delete config.headers.Authorization;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\n// Default action for 401 unauthorized response\r\nAXIOS_CLIENT.interceptors.response.use(\r\n  (res) => res,\r\n  (err) => {\r\n    if (err.response) {\r\n      if (err.response.status === 401) {\r\n        localStorage.clear();\r\n      }\r\n      return Promise.reject(err);\r\n    }\r\n  }\r\n);\r\n\r\nexport { AXIOS_CLIENT };\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./action.types\";\r\n\r\nexport const setAlert =\r\n  (msg, type, timeout = 4000) =>\r\n  (dispatch) => {\r\n    const id = uuidv4();\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { msg, type, id },\r\n    });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n  };\r\n","import * as yup from \"yup\";\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required(),\r\n  password: yup.string().required(),\r\n});\r\n\r\nconst phoneRegExp = /^\\d{10}$/;\r\n\r\n//Store Form Schema\r\nconst addStoreSchema = yup.object().shape({\r\n  store_name: yup\r\n    .string()\r\n    .required(\"Store name is a required field\")\r\n    .min(3, \"Store name must be at least 5 characters\")\r\n    .max(60, \"Store name must not be greater than 60 characters\"),\r\n  username: yup\r\n    .string()\r\n    .required(\"Username is a required field\")\r\n    .min(3, \"Username must be at least 3 characters\")\r\n    .max(45, \"Username must not be greater than 45 characters\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is a required field\")\r\n    .min(6, \"Password must be between 6 to 10 characters\")\r\n    .max(10, \"Password must be between 6 to 10 characters\"),\r\n  store_email_id: yup.string().email(\"Invalid Email\").notRequired(),\r\n  mobile_number: yup.string().matches(phoneRegExp, {\r\n    message: \"Phone number is not valid\",\r\n    excludeEmptyString: true,\r\n  }),\r\n  store_registration_no: yup\r\n    .string()\r\n    .matches(/^(|.{5,})$/, \"Registration Number must be at least 5 characters\")\r\n    .max(60, \"Registration Number must not be more than 60 characters\")\r\n    .nullable(),\r\n  store_license: yup\r\n    .string()\r\n    .required(\"Store license is a required field\")\r\n    .nullable(),\r\n  store_type_id: yup.string().required(\"Store type is a required field\"),\r\n  address_1: yup.string().required(\"Address 1 is a required field\"),\r\n  address_2: yup.string().notRequired(),\r\n});\r\n\r\n//Expiry date validation\r\nvar date = new Date();\r\ndate.setFullYear(date.getFullYear() + 2);\r\n\r\n// Medicine Form Schema\r\nconst addMedicineSchema = yup.object().shape({\r\n  medicine_name: yup\r\n    .string()\r\n    .required(\"Medicine name is a required field\")\r\n    .min(3, \"Medicine name must be at least 5 characters\")\r\n    .max(60, \"Medicine name must not be more than 60 characters\"),\r\n  medicine_price: yup\r\n    .number()\r\n    .required(\"Medicine price is a required field\")\r\n    .min(1, \"Medicine price must be greater than or equal to 1\")\r\n    .max(999.99, \"Medicine price must be less than or equal to 999.99\")\r\n    .nullable(true)\r\n    .transform((value) => (isNaN(value) ? undefined : value)),\r\n  medicine_details: yup\r\n    .string()\r\n    .matches(/^(|.{10,})$/, \"Medicine details must have atleast 10 characters\")\r\n    .max(100, \"Medicine details must not be more than 60 characters\")\r\n    .nullable(),\r\n  medicine_quantity: yup\r\n    .number()\r\n    .integer(\"Medicine quantity must be an integer\")\r\n    .min(1, \"Medicine quantity must be less than or equal to 99\")\r\n    .max(99, \"Medicine quantity must be less than or equal to 99\")\r\n    .nullable(true)\r\n    .transform((value) => (isNaN(value) ? undefined : value)),\r\n  medicine_type_id: yup.string().required(\"Medicine type is a required field\"),\r\n  store_id: yup.string().required(\"Store is a required field\"),\r\n  medicine_expiry_date: yup\r\n    .date()\r\n    .required()\r\n    .min(date, \"Expiry date should be atleast 2 years from today\")\r\n    .nullable()\r\n    .typeError(\"Invalid expiry date\"),\r\n});\r\n\r\nexport { loginSchema, addStoreSchema, addMedicineSchema };\r\n","import React from \"react\";\r\n\r\nconst Error = ({ error }) => {\r\n  return <span className=\"text-danger\">{error}</span>;\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AlertDialog = ({ alerts }) => {\r\n  return alerts?.map((alert) => (\r\n    <Alert key={alert.id} variant={alert.type}>\r\n      <span>{alert.msg}</span>\r\n    </Alert>\r\n  ));\r\n};\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      msg: PropTypes.string,\r\n      type: PropTypes.string,\r\n      id: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default AlertDialog;\r\n","import { Form, Container, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { login } from \"../redux/actions/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginSchema } from \"../utils/yup.schemas\";\r\nimport Error from \"../components/Error\";\r\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\r\nimport AlertDialog from \"../components/Alert\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Login = () => {\r\n  const alerts = useSelector((state) => state.alertReducer) || [];\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(login(data, history));\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(loginSchema),\r\n  });\r\n\r\n  return (\r\n    <div className=\"login_container\">\r\n      <center>\r\n        <LocalHospitalIcon />\r\n      </center>\r\n      <h1>Medical Store Management</h1>\r\n      <Container className=\"form_container\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <AlertDialog alerts={alerts} />\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter username\"\r\n              {...register(\"username\")}\r\n              // defaultValue=\"prashantM\"\r\n            />\r\n            <Error error={errors.username?.message} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              {...register(\"password\")}\r\n              // defaultValue=\"pra123\"\r\n            />\r\n            <Error error={errors.password?.message} />\r\n          </Form.Group>\r\n          <center>\r\n            <Button type=\"submit\">Login</Button>\r\n          </center>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { AUTH_SUCCESS, AUTH_ERROR, LOGOUT } from \"./action.types\";\r\nimport { handleAuthentication } from \"../../utils/auth\";\r\nimport { AXIOS_CLIENT } from \"../../api/axios.config\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nconst authStateCheck = () => async (dispatch) => {\r\n  try {\r\n    await AXIOS_CLIENT.get(\"store/auth-check/\");\r\n    dispatch({ type: AUTH_SUCCESS });\r\n  } catch (error) {\r\n    if (error) {\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  }\r\n};\r\n\r\nconst login = (data, history) => async (dispatch) => {\r\n  try {\r\n    const res = await AXIOS_CLIENT.post(\"store/login/\", data);\r\n    handleAuthentication(res.data.token);\r\n    dispatch({ type: AUTH_SUCCESS });\r\n    history.push(\"/stores\");\r\n  } catch (error) {\r\n    if (error.response) {\r\n      if (error.response.status === 404) {\r\n        // alert(error.response.data?.MSG);\r\n        dispatch(setAlert(error.response.data?.MSG, \"danger\"));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst logout = (history) => async (dispatch) => {\r\n  try {\r\n    await AXIOS_CLIENT.get(\"store/logout/\");\r\n    dispatch({ type: LOGOUT });\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.log(error.response);\r\n    }\r\n  }\r\n};\r\n\r\nconst authError = () => ({\r\n  type: AUTH_ERROR,\r\n});\r\n\r\nexport { authStateCheck, login, logout, authError };\r\n","import {\r\n  MEDS_ERROR,\r\n  LOAD_MEDS,\r\n  DELETE_MED,\r\n  DELETE_MED_ERROR,\r\n  UPDATE_MED,\r\n  ADD_MED,\r\n} from \"./action.types\";\r\nimport { AXIOS_CLIENT } from \"../../api/axios.config\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nconst loadMeds = () => async (dispatch) => {\r\n  try {\r\n    const res = await AXIOS_CLIENT.get(\"medicine/\");\r\n    dispatch({ type: LOAD_MEDS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: MEDS_ERROR });\r\n  }\r\n};\r\n\r\nconst addMed = (data, history) => async (dispatch) => {\r\n  try {\r\n    const res = await AXIOS_CLIENT.post(\"medicine/\", data);\r\n    dispatch({ type: ADD_MED, payload: res.data?.RECORD });\r\n    dispatch(setAlert(res.data?.MSG, \"success\"));\r\n    history.push(\"/medicines\");\r\n  } catch (error) {\r\n    if (error) {\r\n      dispatch(setAlert(\"Operation Failed !\", \"danger\"));\r\n    }\r\n  }\r\n};\r\n\r\nconst updateMed = (data, history) => async (dispatch) => {\r\n  try {\r\n    const res = await AXIOS_CLIENT.put(\"medicine/\", data);\r\n    dispatch({ type: UPDATE_MED, payload: res.data?.RECORD });\r\n    dispatch(setAlert(res.data?.MSG, \"success\"));\r\n    history.push(\"/medicines\");\r\n  } catch (error) {\r\n    if (error) {\r\n      dispatch(setAlert(\"Operation Failed !\", \"success\"));\r\n    }\r\n  }\r\n};\r\n\r\nconst deleteMed = (data, history, currentMeds) => async (dispatch) => {\r\n  dispatch({ type: DELETE_MED, payload: data });\r\n\r\n  try {\r\n    const res = await AXIOS_CLIENT.delete(\"medicine/\", { data });\r\n    dispatch(setAlert(res.data?.MSG, \"success\"));\r\n  } catch (error) {\r\n    if (error) {\r\n      dispatch({ type: DELETE_MED_ERROR, payload: currentMeds });\r\n      dispatch(setAlert(\"Operation Failed !\", \"danger\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport { loadMeds, addMed, updateMed, deleteMed };\r\n","import React from \"react\";\r\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\n\r\nexport const SidebarLinks = [\r\n  {\r\n    title: \"Logout\",\r\n    icon: <PowerSettingsNewIcon />,\r\n    href: \"/\",\r\n    canClick: true,\r\n  },\r\n  {\r\n    title: \"Manage Store\",\r\n    icon: <StoreIcon />,\r\n    href: \"/stores\",\r\n  },\r\n  {\r\n    title: \"Manage Medicine\",\r\n    icon: <LocalHospitalIcon />,\r\n    href: \"/medicines\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { ListItem, List, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { SidebarLinks } from \"./SidebarLinks\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../redux/actions/auth\";\r\n\r\nconst SidebarContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    // console.log(\"___CLICKED___\");\r\n    dispatch(logout(history));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        {SidebarLinks.map((item) =>\r\n          item.canClick ? (\r\n            <ListItem key={item.title} button onClick={handleLogout}>\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.title} />\r\n            </ListItem>\r\n          ) : (\r\n            <ListItem key={item.title} button component={Link} to={item.href}>\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.title} />\r\n            </ListItem>\r\n          )\r\n        )}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarContainer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport SidebarContainer from \"../Sidebar/SidebarContainer\";\r\n\r\n// Higher Order Component to wrap a component with sidebar and appbar\r\nconst withDrawer = (props) => (WrappedComponent) => {\r\n  const rootComponent = (moreProps) => {\r\n    const classes = styles();\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" noWrap>\r\n                {props.title}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            anchor=\"left\"\r\n          >\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <SidebarContainer />\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            <WrappedComponent {...moreProps} />\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return rootComponent;\r\n};\r\n\r\nexport default withDrawer;\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const styles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    backgroundColor: \"#0364C0\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n","import { Button } from \"react-bootstrap\";\r\n\r\nexport const actionConfig = (handleEdit, handleShow) => ({\r\n  title: \"Action\",\r\n  render: (rowData) => {\r\n    return (\r\n      <>\r\n        <Button\r\n          onClick={() => handleEdit(rowData)}\r\n          style={{ marginRight: \"20px\" }}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button className=\"red-btn\" onClick={() => handleShow(rowData)}>\r\n          Delete\r\n        </Button>\r\n      </>\r\n    );\r\n  },\r\n});\r\n","import { actionConfig } from \"./common\";\r\n\r\n// This is the columns config for Medicine table\r\nexport const medicineTableCols = (handleEdit, handleDelete) => {\r\n  return [\r\n    actionConfig(handleEdit, handleDelete),\r\n    {\r\n      title: \"Medicine Name\",\r\n      render: (rowData) => {\r\n        return <span>{rowData.medicine_name}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Medicine Price\",\r\n      render: (rowData) => {\r\n        return <span>Rs. {rowData.medicine_price}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Expiry Date\",\r\n      render: (rowData) => {\r\n        return <span>{rowData.medicine_expiry_date}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Medicine Type\",\r\n      render: (rowData) => {\r\n        return <span>{rowData.medicine_type_id_label}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Store Name\",\r\n      render: (rowData) => {\r\n        return <span>{rowData.store_id_label}</span>;\r\n      },\r\n    },\r\n  ];\r\n};\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Spinner animation=\"border\" variant=\"primary\" size=\"lg\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { Modal, Button } from \"react-bootstrap\";\r\n\r\nexport const ConfirmModal = ({ show, handleClose, handleDelete }) => {\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Warning</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure you want to delete the record?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            No\r\n          </Button>\r\n          <Button className=\"red-btn\" onClick={handleDelete}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ConfirmModal } from \"../Modal\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomizedTables = ({ cols, data, handleDelete, show, handleClose }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {cols?.map((col, idx) => (\r\n              <StyledTableCell key={idx}>{col.title}</StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data?.map((row) => (\r\n            <StyledTableRow key={row.id}>\r\n              {cols?.map((col) => (\r\n                <StyledTableCell key={col.title}>\r\n                  {col.render(row)}\r\n                </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <ConfirmModal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        handleDelete={handleDelete}\r\n      />\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#0364C0\",\r\n    color: theme.palette.common.white,\r\n    fontSize: 16,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nCustomizedTables.propTypes = {\r\n  cols: PropTypes.array,\r\n  data: PropTypes.array,\r\n  show: PropTypes.bool,\r\n  handleDelete: PropTypes.func,\r\n  handleClose: PropTypes.func,\r\n};\r\n\r\nexport default CustomizedTables;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CustomizedTables from \"../components/Table/Table\";\r\nimport AlertDialog from \"./Alert\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RESET_ALERTS } from \"../redux/actions/action.types\";\r\n\r\nconst CrudComponent = ({\r\n  data,\r\n  loading,\r\n  href,\r\n  readAction,\r\n  tableConfig,\r\n  deleteAction,\r\n  btnLabel,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState({});\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const alerts = useSelector((state) => state.alertReducer) || [];\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleShow = (row) => {\r\n    setShow(true);\r\n    setSelectedRow(row);\r\n  };\r\n\r\n  const handleEdit = (record) => {\r\n    // console.log(record);\r\n    history.push({\r\n      pathname: `${href}`,\r\n      state: { record, update: true },\r\n    });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteAction(selectedRow, history, data));\r\n    setShow(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    data.length === 0\r\n      ? dispatch(readAction())\r\n      : console.log(\"USING CACHED DATA FROM REDUX\");\r\n\r\n    return () => {\r\n      dispatch({ type: RESET_ALERTS });\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Link to={href}>\r\n        <Button className=\"add-btn\">\r\n          <AddIcon /> {btnLabel}\r\n        </Button>\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <AlertDialog alerts={alerts} />\r\n          <CustomizedTables\r\n            cols={tableConfig(handleEdit, handleShow)}\r\n            data={data}\r\n            show={show}\r\n            handleDelete={handleDelete}\r\n            handleClose={handleClose}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCrudComponent.propTypes = {\r\n  data: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n  href: PropTypes.string,\r\n  readAction: PropTypes.func,\r\n  tableConfig: PropTypes.func,\r\n  deleteAction: PropTypes.func,\r\n  btnLabel: PropTypes.string,\r\n};\r\n\r\nexport default CrudComponent;\r\n","import { deleteMed, loadMeds } from \"../redux/actions/medicine\";\r\nimport { useSelector } from \"react-redux\";\r\nimport withDrawer from \"../components/Drawer/withDrawer\";\r\nimport { medicineTableCols } from \"../components/Table/config/medicine.table\";\r\nimport CrudComponent from \"../components/CrudComponent\";\r\n\r\nconst Medicine = () => {\r\n  const { meds, loading } = useSelector((state) => state.medReducer) || {};\r\n\r\n  return (\r\n    <CrudComponent\r\n      data={meds}\r\n      loading={loading}\r\n      href=\"/add-medicine\"\r\n      readAction={loadMeds}\r\n      tableConfig={medicineTableCols}\r\n      deleteAction={deleteMed}\r\n      btnLabel=\"Add Medicine\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default withDrawer({ title: \"Manage Medicine\" })(Medicine);\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FormFooter = ({ href }) => {\r\n  return (\r\n    <div style={{ float: \"right\" }}>\r\n      <Link to={href}>\r\n        <Button variant=\"primary\" type=\"button\" style={{ marginRight: \"30px\" }}>\r\n          Back\r\n        </Button>\r\n      </Link>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Save\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormFooter;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport moment from \"moment\";\r\nimport { AXIOS_CLIENT } from \"../api/axios.config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMed, updateMed } from \"../redux/actions/medicine\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addMedicineSchema } from \"../utils/yup.schemas\";\r\nimport withDrawer from \"../components/Drawer/withDrawer\";\r\nimport FormFooter from \"../components/FormFooter\";\r\nimport Error from \"../components/Error\";\r\nimport AlertDialog from \"../components/Alert\";\r\nimport { LOAD_STORES, MED_TYPES } from \"../redux/actions/action.types\";\r\n\r\nconst MedicineForm = (props) => {\r\n  const { record: data, update } = props.location.state || {};\r\n\r\n  const alerts = useSelector((state) => state.alertReducer) || [];\r\n  const { medTypes } = useSelector((state) => state.medReducer) || {};\r\n  const { stores } = useSelector((state) => state.storeReducer) || {};\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    resolver: yupResolver(addMedicineSchema),\r\n  });\r\n\r\n  const onSubmit = (formData) => {\r\n    let newFormData = {\r\n      ...formData,\r\n      medicine_expiry_date: moment(formData.medicine_expiry_date).format(\r\n        \"YYYY-MM-DD\"\r\n      ),\r\n    };\r\n    !update\r\n      ? dispatch(addMed(newFormData, history))\r\n      : dispatch(updateMed({ ...newFormData, id: data?.id }, history));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch medicine types and all stores from server\r\n    const fetchData = () => {\r\n      axios\r\n        .all([AXIOS_CLIENT.get(\"medicine/types/\"), AXIOS_CLIENT.get(\"store/\")])\r\n        .then(\r\n          axios.spread((typesResponse, storeResponse) => {\r\n            // Set data for dynamic select options\r\n            console.log(\"DATA FETCHED FROM SERVER\");\r\n            dispatch({ type: MED_TYPES, payload: typesResponse.data });\r\n            dispatch({ type: LOAD_STORES, payload: storeResponse.data });\r\n            reset({\r\n              medicine_type_id: data?.medicine_type_id,\r\n              store_id: data?.store_id,\r\n            });\r\n          })\r\n        )\r\n        .catch((error) => console.log(error));\r\n    };\r\n\r\n    medTypes.length === 0 || stores.length === 0\r\n      ? fetchData()\r\n      : console.log(\"USING CACHED DATA FROM REDUX\");\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <AlertDialog alerts={alerts} />\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n              <Form.Label>\r\n                Medicine Name <span className=\"text-danger\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={data?.medicine_name}\r\n                {...register(\"medicine_name\")}\r\n              />\r\n              <Error error={errors.medicine_name?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n              <Form.Label>\r\n                Medicine Price <span className=\"text-danger\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                step=\".01\"\r\n                defaultValue={data?.medicine_price}\r\n                {...register(\"medicine_price\")}\r\n              />\r\n              <Error error={errors.medicine_price?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n              <Form.Label>Medicine Details</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={data?.medicine_details}\r\n                {...register(\"medicine_details\")}\r\n              />\r\n              <Error error={errors.medicine_details?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n              <Form.Label>Medicine Quantity</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                defaultValue={data?.medicine_quantity}\r\n                {...register(\"medicine_quantity\")}\r\n              />\r\n              <Error error={errors.medicine_quantity?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>\r\n                Medicine Type <span className=\"text-danger\">*</span>\r\n              </Form.Label>\r\n              <Form.Select\r\n                aria-label=\"Default select example\"\r\n                name=\"medicine_type_id\"\r\n                defaultValue={data?.medicine_type_id}\r\n                {...register(\"medicine_type_id\")}\r\n              >\r\n                <option value=\"\">Select Medicine Type...</option>\r\n                {medTypes?.map((type) => (\r\n                  <option key={type.id} value={type.id}>\r\n                    {type.medicine_type_name}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              <Error error={errors.medicine_type_id?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>\r\n                Store <span className=\"text-danger\">*</span>\r\n              </Form.Label>\r\n              <Form.Select\r\n                aria-label=\"Default select example\"\r\n                defaultValue={data?.store_id}\r\n                {...register(\"store_id\")}\r\n              >\r\n                <option value=\"\">Select Store...</option>\r\n                {stores?.map((store) => (\r\n                  <option key={store.id} value={store.id}>\r\n                    {store.store_name}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              <Error error={errors.store_id?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n              <Form.Label>\r\n                Medicine Expiry Date <span className=\"text-danger\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                defaultValue={data?.medicine_expiry_date}\r\n                {...register(\"medicine_expiry_date\")}\r\n              />\r\n              <Error error={errors.medicine_expiry_date?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <FormFooter href=\"/medicines\" />\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withDrawer({ title: \"Add Medicine\" })(MedicineForm);\r\n","import {\r\n  LOAD_STORES,\r\n  STORES_ERROR,\r\n  DELETE_STORE,\r\n  DELETE_STORE_ERROR,\r\n  ADD_STORE,\r\n  UPDATE_STORE,\r\n} from \"./action.types\";\r\nimport { AXIOS_CLIENT } from \"../../api/axios.config\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nconst loadStores = () => async (dispatch) => {\r\n  try {\r\n    const res = await AXIOS_CLIENT.get(\"store/\");\r\n    dispatch({ type: LOAD_STORES, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: STORES_ERROR });\r\n  }\r\n};\r\n\r\nconst addStore = (data, history) => async (dispatch) => {\r\n  try {\r\n    const res = await AXIOS_CLIENT.post(\"store/\", data);\r\n    dispatch({ type: ADD_STORE, payload: res.data?.RECORD });\r\n    dispatch(setAlert(res.data?.MSG, \"success\"));\r\n    history.push(\"/stores\");\r\n  } catch (error) {\r\n    if (error) {\r\n      if (error.response.status === 400) {\r\n        if (error.response.data.username) {\r\n          dispatch(setAlert(error.response.data.username, \"danger\"));\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst updateStore = (data, history) => async (dispatch) => {\r\n  try {\r\n    const res = await AXIOS_CLIENT.put(\"store/\", data);\r\n    dispatch({ type: UPDATE_STORE, payload: res.data?.RECORD });\r\n    dispatch(setAlert(res.data?.MSG, \"success\"));\r\n    history.push(\"/stores\");\r\n  } catch (error) {\r\n    if (error) {\r\n      console.log(error.response);\r\n      if (error.response?.status === 400) {\r\n        if (error.response?.data.username) {\r\n          dispatch(setAlert(error.response.data.username, \"danger\"));\r\n        }\r\n      } else {\r\n        dispatch(setAlert(\"Operation Failed !\", \"danger\"));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst deleteStore = (data, history, currentstores) => async (dispatch) => {\r\n  dispatch({ type: DELETE_STORE, payload: data });\r\n  try {\r\n    const res = await AXIOS_CLIENT.delete(\"store/\", { data });\r\n    dispatch(setAlert(res.data?.MSG, \"success\"));\r\n  } catch (error) {\r\n    if (error) {\r\n      console.log(error.response);\r\n      dispatch({ type: DELETE_STORE_ERROR, payload: currentstores });\r\n      dispatch(setAlert(\"Operation Failed !\", \"danger\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport { loadStores, addStore, updateStore, deleteStore };\r\n","import { actionConfig } from \"./common\";\r\n\r\n// This is the columns config for Store table\r\nexport const storeTableCols = (handleEdit, handleDelete, handleShow) => {\r\n  return [\r\n    actionConfig(handleEdit, handleDelete, handleShow),\r\n    {\r\n      title: \"Store Name\",\r\n      render: (rowData) => {\r\n        return <span>{rowData.store_name}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Username\",\r\n      render: (rowData) => {\r\n        return <span>{rowData.username}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Store License\",\r\n      render: (rowData) => {\r\n        return (\r\n          <span>\r\n            {rowData.store_license === 0\r\n              ? \"Retail Drug Licence\"\r\n              : \"Wholesale Drug Licence\"}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Store Type\",\r\n      render: (rowData) => {\r\n        return <span>{rowData.store_type_label}</span>;\r\n      },\r\n    },\r\n  ];\r\n};\r\n","import { deleteStore, loadStores } from \"../redux/actions/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport withDrawer from \"../components/Drawer/withDrawer\";\r\nimport { storeTableCols } from \"../components/Table/config/store.table\";\r\nimport CrudComponent from \"../components/CrudComponent\";\r\n\r\nconst Store = () => {\r\n  const { stores, loading } = useSelector((state) => state.storeReducer) || {};\r\n\r\n  return (\r\n    <CrudComponent\r\n      data={stores}\r\n      loading={loading}\r\n      href=\"/add-store\"\r\n      readAction={loadStores}\r\n      tableConfig={storeTableCols}\r\n      deleteAction={deleteStore}\r\n      btnLabel=\"Add Store\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default withDrawer({ title: \"Manage Store\" })(Store);\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addStore, updateStore } from \"../redux/actions/store\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { STORE_TYPES, STORE_TYPES_ERROR } from \"../redux/actions/action.types\";\r\nimport { AXIOS_CLIENT } from \"../api/axios.config\";\r\nimport { addStoreSchema } from \"../utils/yup.schemas\";\r\nimport withDrawer from \"../components/Drawer/withDrawer\";\r\nimport FormFooter from \"../components/FormFooter\";\r\nimport Error from \"../components/Error\";\r\nimport AlertDialog from \"../components/Alert\";\r\n\r\nconst StoreForm = (props) => {\r\n  const { record: data, update } = props.location.state || {};\r\n\r\n  const { storeTypes } = useSelector((state) => state.storeReducer) || {};\r\n  const alerts = useSelector((state) => state.alertReducer) || [];\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    resolver: yupResolver(addStoreSchema),\r\n  });\r\n\r\n  const onSubmit = (formData) => {\r\n    !update\r\n      ? dispatch(addStore(formData, history))\r\n      : dispatch(updateStore({ ...formData, id: data?.id }, history));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch All Store Types\r\n    const fetchStoreTypes = async () => {\r\n      console.log(\"FETCHING STORE TYPES....\");\r\n      try {\r\n        const res = await AXIOS_CLIENT.get(\"store/types/\");\r\n        dispatch({ type: STORE_TYPES, payload: res.data });\r\n        reset({ store_type_id: data?.store_type_id });\r\n      } catch (error) {\r\n        dispatch({ type: STORE_TYPES_ERROR });\r\n      }\r\n    };\r\n\r\n    storeTypes.length === 0\r\n      ? fetchStoreTypes()\r\n      : console.log(\"USING CACHED STORE TYPES FROM REDUX\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <AlertDialog alerts={alerts} />\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>\r\n                Store Name <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={data?.store_name}\r\n                {...register(\"store_name\")}\r\n              />\r\n              <Error error={errors.store_name?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>\r\n                Username <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={data?.username}\r\n                {...register(\"username\")}\r\n              />\r\n              <Error error={errors.username?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>\r\n                {!update ? \"Password\" : \"New Password\"}{\" \"}\r\n                <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control type=\"password\" {...register(\"password\")} />\r\n              <Error error={errors.password?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Email Id</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={data?.store_email_id}\r\n                {...register(\"store_email_id\")}\r\n              />\r\n              <Error error={errors.store_email_id?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Mobile Number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={data?.mobile_number}\r\n                {...register(\"mobile_number\")}\r\n              />\r\n              <Error error={errors.mobile_number?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Registration No</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={data?.store_registration_no}\r\n                {...register(\"store_registration_no\")}\r\n              />\r\n              <Error error={errors.store_registration_no?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group>\r\n              <Form.Label>\r\n                Store License <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Group>\r\n                <Form.Check\r\n                  inline\r\n                  label=\"Retail Drug License\"\r\n                  type=\"radio\"\r\n                  value={0}\r\n                  defaultChecked={data?.store_license === 0}\r\n                  {...register(\"store_license\")}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"Wholesale Drug License\"\r\n                  type=\"radio\"\r\n                  value={1}\r\n                  defaultChecked={data?.store_license === 1}\r\n                  {...register(\"store_license\")}\r\n                />\r\n              </Form.Group>\r\n              <Error error={errors.store_license?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>\r\n                Store Type <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Select\r\n                aria-label=\"Default select example\"\r\n                defaultValue={data?.store_type_id}\r\n                {...register(\"store_type_id\")}\r\n              >\r\n                <option value=\"\">Select Store Type...</option>\r\n                {storeTypes?.map((type) => (\r\n                  <option key={type.id} value={type.id}>\r\n                    {type.type_name}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              <Error error={errors.store_type_id?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>\r\n                Address 1 <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                defaultValue={data?.address_1}\r\n                {...register(\"address_1\")}\r\n              />\r\n              <Error error={errors.address_1?.message} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Address 2</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                defaultValue={data?.address_2}\r\n                {...register(\"address_2\")}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <FormFooter href=\"/stores\" />\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withDrawer({ title: \"Add Store\" })(StoreForm);\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { loading, isAuthenticated } =\r\n    useSelector((state) => state.authReducer) || {};\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        loading ? (\r\n          <div className=\"fs-loader\">\r\n            <Loader />\r\n          </div>\r\n        ) : isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\", authenticated: false }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Medicine from \"./pages/Manage.Medicine\";\nimport MedicineForm from \"./pages/Add.Medicine\";\nimport Store from \"./pages/Manage.Store\";\nimport StoreForm from \"./pages/Add.Store\";\nimport { useDispatch } from \"react-redux\";\nimport { authStateCheck, authError } from \"./redux/actions/auth\";\nimport { getAuthToken } from \"./utils/auth\";\nimport PrivateRoute from \"./components/Private.Route\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authStateCheck());\n\n    window.addEventListener(\"storage\", () => {\n      if (!getAuthToken()) dispatch(authError());\n    });\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={Login} exact />\n        <PrivateRoute path=\"/stores\" component={Store} />\n        <PrivateRoute path=\"/add-store\" component={StoreForm} />\n        <PrivateRoute path=\"/medicines\" component={Medicine} />\n        <PrivateRoute path=\"/add-medicine\" component={MedicineForm} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { AUTH_SUCCESS, AUTH_ERROR, LOGOUT } from \"../actions/action.types\";\r\n\r\nconst INIT_STATE = { isAuthenticated: false, loading: true };\r\n\r\nconst authReducer = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS: {\r\n      return { isAuthenticated: true, loading: false };\r\n    }\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import {\r\n  ADD_STORE,\r\n  DELETE_STORE,\r\n  DELETE_STORE_ERROR,\r\n  LOAD_STORES,\r\n  STORES_ERROR,\r\n  STORE_TYPES,\r\n  STORE_TYPES_ERROR,\r\n  UPDATE_STORE,\r\n} from \"../actions/action.types\";\r\n\r\nconst INIT_STATE = { stores: [], loading: true, storeTypes: [] };\r\n\r\nconst storeReducer = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOAD_STORES: {\r\n      return {\r\n        ...state,\r\n        stores: action.payload,\r\n        loading: false,\r\n      };\r\n    }\r\n    case STORES_ERROR: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    case STORE_TYPES: {\r\n      return {\r\n        ...state,\r\n        storeTypes: action.payload,\r\n        loading: false,\r\n      };\r\n    }\r\n    case STORE_TYPES_ERROR: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    case ADD_STORE: {\r\n      return {\r\n        ...state,\r\n        stores: [...state.stores, action.payload],\r\n      };\r\n    }\r\n    case UPDATE_STORE: {\r\n      return {\r\n        ...state,\r\n        stores: state.stores.map((store) =>\r\n          store.id === action.payload.id ? action.payload : store\r\n        ),\r\n      };\r\n    }\r\n    case DELETE_STORE: {\r\n      return {\r\n        ...state,\r\n        stores: state.stores.filter((store) => store.id !== action.payload.id),\r\n      };\r\n    }\r\n    case DELETE_STORE_ERROR: {\r\n      return {\r\n        ...state,\r\n        stores: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default storeReducer;\r\n","import {\r\n  ADD_MED,\r\n  LOAD_MEDS,\r\n  MEDS_ERROR,\r\n  MED_TYPES,\r\n  MED_TYPES_ERROR,\r\n  DELETE_MED,\r\n  DELETE_MED_ERROR,\r\n  UPDATE_MED,\r\n} from \"../actions/action.types\";\r\n\r\nconst INIT_STATE = { meds: [], loading: true, medTypes: [] };\r\n\r\nconst medReducer = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOAD_MEDS: {\r\n      return {\r\n        ...state,\r\n        meds: action.payload,\r\n        loading: false,\r\n      };\r\n    }\r\n    case MEDS_ERROR: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    case MED_TYPES: {\r\n      return {\r\n        ...state,\r\n        medTypes: action.payload,\r\n        loading: false,\r\n      };\r\n    }\r\n    case MED_TYPES_ERROR: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    case ADD_MED: {\r\n      return {\r\n        ...state,\r\n        meds: [...state.meds, action.payload],\r\n      };\r\n    }\r\n    case UPDATE_MED: {\r\n      return {\r\n        ...state,\r\n        meds: state.meds.map((med) =>\r\n          med.id === action.payload.id ? action.payload : med\r\n        ),\r\n      };\r\n    }\r\n    case DELETE_MED: {\r\n      return {\r\n        ...state,\r\n        meds: state.meds.filter((med) => med.id !== action.payload.id),\r\n      };\r\n    }\r\n    case DELETE_MED_ERROR: {\r\n      return {\r\n        ...state,\r\n        meds: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default medReducer;\r\n","import { SET_ALERT, REMOVE_ALERT, RESET_ALERTS } from \"../actions/action.types\";\r\n\r\nconst INIT_STATE = [];\r\n\r\nconst alertReducer = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT: {\r\n      return [...state, action.payload];\r\n    }\r\n    case REMOVE_ALERT: {\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    }\r\n    case RESET_ALERTS: {\r\n      return [];\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default alertReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth.reducer\";\r\nimport storeReducer from \"./store.reducer\";\r\nimport medReducer from \"./medicine.reducer\";\r\nimport alertReducer from \"./alert.reducer\";\r\nimport { LOGOUT } from \"../actions/action.types\";\r\n\r\nconst appReducer = combineReducers({\r\n  authReducer,\r\n  storeReducer,\r\n  medReducer,\r\n  alertReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === LOGOUT) state = undefined;\r\n\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers/\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\r\n\r\nexport const store = createStore(rootReducer, composedEnhancer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}